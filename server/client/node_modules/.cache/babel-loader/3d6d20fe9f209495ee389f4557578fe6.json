{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osama\\\\Desktop\\\\New folder\\\\CLoud Project\\\\MSTeams\\\\MSTeams\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\n//imports\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport socket from '../../socket'; //------------------------------------------------------------------------------\n\nconst Chat = ({\n  display,\n  roomId\n}) => {\n  const currentUser = sessionStorage.getItem('user');\n  const [msg, setMsg] = useState([]);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(); // when a new message is received\n\n  useEffect(() => {\n    socket.on('message-received', ({\n      msg,\n      sender\n    }) => {\n      setMsg(msgs => [...msgs, {\n        sender,\n        msg\n      }]);\n    });\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [msg]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }; // when a message is sent\n\n\n  const sendMessage = e => {\n    if (e.key === 'Enter') {\n      const msg = e.target.value;\n\n      if (msg) {\n        socket.emit('message-sent', {\n          roomId,\n          msg,\n          sender: currentUser\n        });\n        inputRef.current.value = '';\n      }\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // Display chat window only when the chat button is clicked\n    React.createElement(ChatContainer, {\n      className: display ? '' : 'width0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Titlebox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, \"Chat Room\"), /*#__PURE__*/React.createElement(ChatWindow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MessageList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, msg && msg.map(({\n      sender,\n      msg\n    }, idx) => {\n      if (sender !== currentUser) {\n        return /*#__PURE__*/React.createElement(Message, {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        }, sender), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }\n        }, msg));\n      } else {\n        return /*#__PURE__*/React.createElement(UserMessage, {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }\n        }, sender), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }\n        }, msg));\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        clear: 'both'\n      },\n      ref: messagesEndRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(InputArea, {\n      ref: inputRef,\n      onKeyUp: sendMessage,\n      placeholder: \"Enter your message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }))\n  );\n}; // -------------------------------------------------------------------------\n// Styled Components:\n\n\nconst ChatContainer = styled.div`\n  background-color: #d1d1f5;\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  hieght: 100%;\n  transition: all 0.5s ease;\n  overflow: hidden;\n`;\nconst ChatWindow = styled.div`\n  width: 100%;\n  height: 83%;\n  max-height: 83%;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\nconst Titlebox = styled.div`\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n  font-weight: 600;\n  font-size: 20px;\n  color: black;\n`;\nconst Message = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 16px;\n  margin-top: 15px;\n  margin-left: 15px;\n  text-align: left;\n\n  > strong {\n    margin-left: 3px;\n  }\n\n  > p {\n    max-width: 65%;\n    width: auto;\n    padding: 9px;\n    margin-top: 3px;\n    border: 1px solid rgb(78, 161, 211, 0.3);\n    border-radius: 15px;\n    box-shadow: 0px 0px 3px #6264a7;\n    font-size: 14px;\n  }\n`;\nconst MessageList = styled.div`\n  display: flex;\n  width: 100%;\n  color: #454552;\n  flex-direction: column;\n  padding: 15px;\n`;\nconst UserMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  width: 100%;\n  font-size: 16px;\n  margin-top: 15px;\n  text-align: right;\n\n  > strong {\n    margin-right: 35px;\n  }\n\n  > p {\n    max-width: 65%;\n    width: auto;\n    padding: 9px;\n    margin-top: 3px;\n    margin-right: 30px;\n    border: 1px solid rgb(78, 161, 211, 0.3);\n    border-radius: 15px;\n    background-color: #6264a7;\n    color: white;\n    font-size: 14px;\n    text-align: left;\n  }\n`;\nconst InputArea = styled.input`\n  bottom: 0;\n  width: 100%;\n  height: 8%;\n  padding: 15px;\n  border-top: 1px solid rgb(69, 69, 82, 0.25);\n  box-sizing: border-box;\n  opacity: 0.7;\n\n  :focus {\n    outline: none;\n  }\n`;\nexport default Chat;","map":{"version":3,"sources":["C:/Users/osama/Desktop/New folder/CLoud Project/MSTeams/MSTeams/client/src/components/Chat/Chat.js"],"names":["React","useEffect","useState","useRef","styled","socket","Chat","display","roomId","currentUser","sessionStorage","getItem","msg","setMsg","messagesEndRef","inputRef","on","sender","msgs","scrollToBottom","current","scrollIntoView","behavior","sendMessage","e","key","target","value","emit","map","idx","float","clear","ChatContainer","div","ChatWindow","Titlebox","Message","MessageList","UserMessage","InputArea","input"],"mappings":"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","sourcesContent":["//imports\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport socket from '../../socket';\n//------------------------------------------------------------------------------\n\nconst Chat = ({ display, roomId }) => {\n  const currentUser = sessionStorage.getItem('user');\n  const [msg, setMsg] = useState([]);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef();\n\n  // when a new message is received\n  useEffect(() => {\n    socket.on('message-received', ({ msg, sender }) => {\n      setMsg((msgs) => [...msgs, { sender, msg }]);\n    });\n  }, []);\n\n\n  useEffect(() => { scrollToBottom() }, [msg])\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  // when a message is sent\n  const sendMessage = (e) => {\n    if (e.key === 'Enter') {\n      const msg = e.target.value;\n\n      if (msg) {\n        socket.emit('message-sent', { roomId, msg, sender: currentUser });\n        inputRef.current.value = '';\n      }\n    }\n  };\n\n  return (\n    // Display chat window only when the chat button is clicked\n    <ChatContainer className={display ? '' : 'width0'}>\n\n      <Titlebox>Chat Room</Titlebox>\n\n      <ChatWindow>\n        {/* Section where all the sent messages are displayed */}\n        <MessageList>\n          {msg &&\n            msg.map(({ sender, msg }, idx) => {\n              if (sender !== currentUser) {\n                return (\n                  <Message key={idx}>\n                    <strong>{sender}</strong>\n                    <p>{msg}</p>\n                  </Message>\n                );\n              } else {\n                return (\n                  <UserMessage key={idx}>\n                    <strong>{sender}</strong>\n                    <p>{msg}</p>\n                  </UserMessage>\n                );\n              }\n            })}\n\n          <div style={{ float: 'left', clear: 'both' }} ref={messagesEndRef} />\n        </MessageList>\n\n      </ChatWindow>\n\n      {/* input box where message can be typed */}\n      <InputArea\n        ref={inputRef}\n        onKeyUp={sendMessage}\n        placeholder=\"Enter your message\"\n      />\n\n    </ChatContainer>\n  );\n};\n\n// -------------------------------------------------------------------------\n// Styled Components:\n\nconst ChatContainer = styled.div`\n  background-color: #d1d1f5;\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  hieght: 100%;\n  transition: all 0.5s ease;\n  overflow: hidden;\n`;\n\nconst ChatWindow = styled.div`\n  width: 100%;\n  height: 83%;\n  max-height: 83%;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst Titlebox = styled.div`\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n  font-weight: 600;\n  font-size: 20px;\n  color: black;\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 16px;\n  margin-top: 15px;\n  margin-left: 15px;\n  text-align: left;\n\n  > strong {\n    margin-left: 3px;\n  }\n\n  > p {\n    max-width: 65%;\n    width: auto;\n    padding: 9px;\n    margin-top: 3px;\n    border: 1px solid rgb(78, 161, 211, 0.3);\n    border-radius: 15px;\n    box-shadow: 0px 0px 3px #6264a7;\n    font-size: 14px;\n  }\n`;\n\nconst MessageList = styled.div`\n  display: flex;\n  width: 100%;\n  color: #454552;\n  flex-direction: column;\n  padding: 15px;\n`;\n\nconst UserMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  width: 100%;\n  font-size: 16px;\n  margin-top: 15px;\n  text-align: right;\n\n  > strong {\n    margin-right: 35px;\n  }\n\n  > p {\n    max-width: 65%;\n    width: auto;\n    padding: 9px;\n    margin-top: 3px;\n    margin-right: 30px;\n    border: 1px solid rgb(78, 161, 211, 0.3);\n    border-radius: 15px;\n    background-color: #6264a7;\n    color: white;\n    font-size: 14px;\n    text-align: left;\n  }\n`;\n\nconst InputArea = styled.input`\n  bottom: 0;\n  width: 100%;\n  height: 8%;\n  padding: 15px;\n  border-top: 1px solid rgb(69, 69, 82, 0.25);\n  box-sizing: border-box;\n  opacity: 0.7;\n\n  :focus {\n    outline: none;\n  }\n`;\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}