{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\osama\\\\Desktop\\\\New folder\\\\cldc-project\\\\server\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _toConsumableArray from\"C:\\\\Users\\\\osama\\\\Desktop\\\\New folder\\\\cldc-project\\\\server\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\osama\\\\Desktop\\\\New folder\\\\cldc-project\\\\server\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  bottom: 0;\\n  width: 100%;\\n  height: 8%;\\n  padding: 15px;\\n  border-top: 1px solid rgb(69, 69, 82, 0.25);\\n  box-sizing: border-box;\\n  opacity: 0.7;\\n\\n  :focus {\\n    outline: none;\\n  }\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-end;\\n  width: 100%;\\n  font-size: 16px;\\n  margin-top: 15px;\\n  text-align: right;\\n\\n  > strong {\\n    margin-right: 35px;\\n  }\\n\\n  > p {\\n    max-width: 65%;\\n    width: auto;\\n    padding: 9px;\\n    margin-top: 3px;\\n    margin-right: 30px;\\n    border: 1px solid rgb(78, 161, 211, 0.3);\\n    border-radius: 15px;\\n    background-color: #6264a7;\\n    color: white;\\n    font-size: 14px;\\n    text-align: left;\\n  }\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  color: #454552;\\n  flex-direction: column;\\n  padding: 15px;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  font-size: 16px;\\n  margin-top: 15px;\\n  margin-left: 15px;\\n  text-align: left;\\n\\n  > strong {\\n    margin-left: 3px;\\n  }\\n\\n  > p {\\n    max-width: 65%;\\n    width: auto;\\n    padding: 9px;\\n    margin-top: 3px;\\n    border: 1px solid rgb(78, 161, 211, 0.3);\\n    border-radius: 15px;\\n    box-shadow: 0px 0px 3px #6264a7;\\n    font-size: 14px;\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  text-align: center;\\n  margin-top: 15px;\\n  font-weight: 600;\\n  font-size: 20px;\\n  color: black;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 83%;\\n  max-height: 83%;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  background-color: #d1d1f5;\\n  display: flex;\\n  flex-direction: column;\\n  width: 30%;\\n  hieght: 100%;\\n  transition: all 0.5s ease;\\n  overflow: hidden;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}//imports\nimport React,{useEffect,useState,useRef}from'react';import styled from'styled-components';import socket from'../../socket';//------------------------------------------------------------------------------\nvar Chat=function Chat(_ref){var display=_ref.display,roomId=_ref.roomId;var currentUser=sessionStorage.getItem('user');var _useState=useState([]),_useState2=_slicedToArray(_useState,2),msg=_useState2[0],setMsg=_useState2[1];var messagesEndRef=useRef(null);var inputRef=useRef();// when a new message is received\nuseEffect(function(){socket.on('message-received',function(_ref2){var msg=_ref2.msg,sender=_ref2.sender;setMsg(function(msgs){return[].concat(_toConsumableArray(msgs),[{sender:sender,msg:msg}]);});});},[]);useEffect(function(){scrollToBottom();},[msg]);var scrollToBottom=function scrollToBottom(){messagesEndRef.current.scrollIntoView({behavior:'smooth'});};// when a message is sent\nvar sendMessage=function sendMessage(e){if(e.key==='Enter'){var _msg=e.target.value;if(_msg){socket.emit('message-sent',{roomId:roomId,msg:_msg,sender:currentUser});inputRef.current.value='';}}};return/*#__PURE__*/ // Display chat window only when the chat button is clicked\nReact.createElement(ChatContainer,{className:display?'':'width0'},/*#__PURE__*/React.createElement(Titlebox,null,\"Chat Room\"),/*#__PURE__*/React.createElement(ChatWindow,null,/*#__PURE__*/React.createElement(MessageList,null,msg&&msg.map(function(_ref3,idx){var sender=_ref3.sender,msg=_ref3.msg;if(sender!==currentUser){return/*#__PURE__*/React.createElement(Message,{key:idx},/*#__PURE__*/React.createElement(\"strong\",null,sender),/*#__PURE__*/React.createElement(\"p\",null,msg));}else{return/*#__PURE__*/React.createElement(UserMessage,{key:idx},/*#__PURE__*/React.createElement(\"strong\",null,sender),/*#__PURE__*/React.createElement(\"p\",null,msg));}}),/*#__PURE__*/React.createElement(\"div\",{style:{float:'left',clear:'both'},ref:messagesEndRef}))),/*#__PURE__*/React.createElement(InputArea,{ref:inputRef,onKeyUp:sendMessage,placeholder:\"Enter your message\"}));};// -------------------------------------------------------------------------\n// Styled Components:\nvar ChatContainer=styled.div(_templateObject());var ChatWindow=styled.div(_templateObject2());var Titlebox=styled.div(_templateObject3());var Message=styled.div(_templateObject4());var MessageList=styled.div(_templateObject5());var UserMessage=styled.div(_templateObject6());var InputArea=styled.input(_templateObject7());export default Chat;","map":{"version":3,"sources":["C:/Users/osama/Desktop/New folder/cldc-project/server/client/src/components/Chat/Chat.js"],"names":["React","useEffect","useState","useRef","styled","socket","Chat","display","roomId","currentUser","sessionStorage","getItem","msg","setMsg","messagesEndRef","inputRef","on","sender","msgs","scrollToBottom","current","scrollIntoView","behavior","sendMessage","e","key","target","value","emit","map","idx","float","clear","ChatContainer","div","ChatWindow","Titlebox","Message","MessageList","UserMessage","InputArea","input"],"mappings":"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","sourcesContent":["//imports\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport socket from '../../socket';\n//------------------------------------------------------------------------------\n\nconst Chat = ({ display, roomId }) => {\n  const currentUser = sessionStorage.getItem('user');\n  const [msg, setMsg] = useState([]);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef();\n\n  // when a new message is received\n  useEffect(() => {\n    socket.on('message-received', ({ msg, sender }) => {\n      setMsg((msgs) => [...msgs, { sender, msg }]);\n    });\n  }, []);\n\n\n  useEffect(() => { scrollToBottom() }, [msg])\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  // when a message is sent\n  const sendMessage = (e) => {\n    if (e.key === 'Enter') {\n      const msg = e.target.value;\n\n      if (msg) {\n        socket.emit('message-sent', { roomId, msg, sender: currentUser });\n        inputRef.current.value = '';\n      }\n    }\n  };\n\n  return (\n    // Display chat window only when the chat button is clicked\n    <ChatContainer className={display ? '' : 'width0'}>\n\n      <Titlebox>Chat Room</Titlebox>\n\n      <ChatWindow>\n        {/* Section where all the sent messages are displayed */}\n        <MessageList>\n          {msg &&\n            msg.map(({ sender, msg }, idx) => {\n              if (sender !== currentUser) {\n                return (\n                  <Message key={idx}>\n                    <strong>{sender}</strong>\n                    <p>{msg}</p>\n                  </Message>\n                );\n              } else {\n                return (\n                  <UserMessage key={idx}>\n                    <strong>{sender}</strong>\n                    <p>{msg}</p>\n                  </UserMessage>\n                );\n              }\n            })}\n\n          <div style={{ float: 'left', clear: 'both' }} ref={messagesEndRef} />\n        </MessageList>\n\n      </ChatWindow>\n\n      {/* input box where message can be typed */}\n      <InputArea\n        ref={inputRef}\n        onKeyUp={sendMessage}\n        placeholder=\"Enter your message\"\n      />\n\n    </ChatContainer>\n  );\n};\n\n// -------------------------------------------------------------------------\n// Styled Components:\n\nconst ChatContainer = styled.div`\n  background-color: #d1d1f5;\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  hieght: 100%;\n  transition: all 0.5s ease;\n  overflow: hidden;\n`;\n\nconst ChatWindow = styled.div`\n  width: 100%;\n  height: 83%;\n  max-height: 83%;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst Titlebox = styled.div`\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n  font-weight: 600;\n  font-size: 20px;\n  color: black;\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 16px;\n  margin-top: 15px;\n  margin-left: 15px;\n  text-align: left;\n\n  > strong {\n    margin-left: 3px;\n  }\n\n  > p {\n    max-width: 65%;\n    width: auto;\n    padding: 9px;\n    margin-top: 3px;\n    border: 1px solid rgb(78, 161, 211, 0.3);\n    border-radius: 15px;\n    box-shadow: 0px 0px 3px #6264a7;\n    font-size: 14px;\n  }\n`;\n\nconst MessageList = styled.div`\n  display: flex;\n  width: 100%;\n  color: #454552;\n  flex-direction: column;\n  padding: 15px;\n`;\n\nconst UserMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  width: 100%;\n  font-size: 16px;\n  margin-top: 15px;\n  text-align: right;\n\n  > strong {\n    margin-right: 35px;\n  }\n\n  > p {\n    max-width: 65%;\n    width: auto;\n    padding: 9px;\n    margin-top: 3px;\n    margin-right: 30px;\n    border: 1px solid rgb(78, 161, 211, 0.3);\n    border-radius: 15px;\n    background-color: #6264a7;\n    color: white;\n    font-size: 14px;\n    text-align: left;\n  }\n`;\n\nconst InputArea = styled.input`\n  bottom: 0;\n  width: 100%;\n  height: 8%;\n  padding: 15px;\n  border-top: 1px solid rgb(69, 69, 82, 0.25);\n  box-sizing: border-box;\n  opacity: 0.7;\n\n  :focus {\n    outline: none;\n  }\n`;\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}